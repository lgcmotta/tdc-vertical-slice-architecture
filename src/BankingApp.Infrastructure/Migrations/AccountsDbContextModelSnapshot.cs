// <auto-generated />
using System;
using BankingApp.Infrastructure.EntityFramework.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingApp.Infrastructure.Migrations
{
    [DbContext(typeof(AccountsDbContext))]
    partial class AccountsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BankingApp.Domain.Aggregates.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BankingApp.Domain.Entities.AccountBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("AccountBalance");
                });

            modelBuilder.Entity("BankingApp.Domain.Entities.AccountTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AccountBalanceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("BalanceBeforeTransaction")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("Occurrence")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionValue")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("AccountBalanceId");

                    b.ToTable("AccountTransaction");
                });

            modelBuilder.Entity("BankingApp.Domain.Entities.AccountBalance", b =>
                {
                    b.HasOne("BankingApp.Domain.Aggregates.Account", null)
                        .WithOne("_accountBalance")
                        .HasForeignKey("BankingApp.Domain.Entities.AccountBalance", "AccountId");
                });

            modelBuilder.Entity("BankingApp.Domain.Entities.AccountTransaction", b =>
                {
                    b.HasOne("BankingApp.Domain.Entities.AccountBalance", null)
                        .WithMany("_transactions")
                        .HasForeignKey("AccountBalanceId");
                });

            modelBuilder.Entity("BankingApp.Domain.Aggregates.Account", b =>
                {
                    b.Navigation("_accountBalance");
                });

            modelBuilder.Entity("BankingApp.Domain.Entities.AccountBalance", b =>
                {
                    b.Navigation("_transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
