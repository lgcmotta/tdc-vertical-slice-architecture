// <auto-generated />
using System;
using BankingApp.Fees.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingApp.Fees.API.Migrations
{
    [DbContext(typeof(AccountFeesDbContext))]
    partial class AccountFeesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BankingApp.Taxes.Domain.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("CurrentBalanceInUSD")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("LastBalanceChange")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BankingApp.Taxes.Domain.Entities.FeeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("FeeHistory");
                });

            modelBuilder.Entity("BankingApp.Taxes.Domain.Entities.FeeHistory", b =>
                {
                    b.HasOne("BankingApp.Taxes.Domain.Account", null)
                        .WithMany("FeeHistory")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("BankingApp.Taxes.Domain.Account", b =>
                {
                    b.Navigation("FeeHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
